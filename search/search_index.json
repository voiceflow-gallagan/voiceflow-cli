{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Voiceflow CLI","text":"<p><code>voiceflow-cli</code> is a command-line tool that helps Voiceflow users test their agents and interact with them in various ways. It is useful for your day-to-day tasks or if you want to integrate it with your favorite CI tool.</p>"},{"location":"#get-started","title":"Get started","text":"<ul> <li>How to install the tool</li> <li>Authentication</li> <li>Read the FAQ</li> </ul>"},{"location":"#got-questions-comments-or-suggestions","title":"Got questions, comments or suggestions?","text":"<p><code>voiceflow-cli</code> is developed by xavidop.</p> <p>You can contact us via email at: xavierportillaedo@gmail.com.</p> <p>Follow @xavidop on Twitter for updates and announcements.</p> <p>Visit our links section for more information about staying connected with us.</p>"},{"location":"links/","title":"Links","text":"<ul> <li>Follow our progress on the GitHub repository</li> <li>Follow me on Twitter and for updates</li> <li>Join our Discord server</li> <li>Read my blog</li> <li>Sign up for my newsletter</li> <li>For questions, support and general discussion, please use GitHub Discussions</li> <li>Contributing Guidelines</li> <li>Security Policy</li> </ul> <p>This project adheres to the Contributor Covenant code of conduct. By participating, you are expected to uphold this code.</p>"},{"location":"security/","title":"Security Policy","text":""},{"location":"security/#supported-versions","title":"Supported Versions","text":"<p>Only the last stable version at any given point.</p>"},{"location":"security/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>Vulnerabilities can be disclosed via email to xavierportillaedo@gmail.com</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#getting-support","title":"Getting support","text":"<p>All users have access to a public Voiceflow Discord server for support and collaboration. Refer to the links page for more information.</p>"},{"location":"troubleshooting/#project-not-found","title":"Project not found","text":"<p>Make sure that the Voiceflow project exists and is accessible by the user and API Key that is in used corresponds to that project. If the project is not found, the CLI will return an error message.</p>"},{"location":"agents/export/","title":"Export an agent","text":"<p>With the <code>vocieflow-cli</code> you can export your agent inforamtion. This is useful when you want to get the <code>.vf</code> file of your project. The <code>voiceflow-cli</code> has one command that allows you to export an agent from your terminal:</p> <p>To export an agent, you need to know the <code>agent-id</code> and the <code>version-id</code> of the agent you want to export from. You can find that information in the Voiceflow Agent section under your Agent Settings on voiceflow.com.</p> <pre><code>voiceflow agent export --agent-id &lt;your-agent-id&gt; --version-id &lt;your-version-id&gt; --output-file &lt;path-to-save&gt;\n</code></pre>"},{"location":"agents/introduction/","title":"Agents","text":""},{"location":"agents/introduction/#what-is-this","title":"What is this?","text":"<p>A Voiceflow agent is a conversational AI that can be used to create voice and chat applications. It is a collection of conversational components that are used to create a conversational flow. The agent can be used to create voice and chat applications that can be used to interact with users.</p>"},{"location":"agents/introduction/#reference","title":"Reference","text":"<p>The <code>voiceflow-cli</code> has a command that allows you to interact with your Vocieflow Agents from your terminal or from your CI pipelines.</p> <p>To know more, you can run the <code>voiceflow agent</code> command. For the usage, please refer to this page.</p>"},{"location":"analytics/fetch/","title":"Fetch Analytics","text":"<p>With the <code>vocieflow-cli</code> you can fetch the analytics of your project. This is useful when you want to get the get the analytics and import them to another system. The <code>voiceflow-cli</code> has one command that allows you to export your voiceflow agent Analytics from your terminal:</p> <p>To export the analytics, you need to know the <code>agent-id</code> of the agent you want to export from. You can find that information in the Voiceflow Agent section under your Agent Settings on voiceflow.com.</p> <pre><code>voiceflow agent export --agent-id &lt;your-agent-id&gt; --output-file &lt;path-to-save&gt;\n</code></pre>"},{"location":"analytics/fetch/#filters","title":"Filters","text":"<p>The Voiceflow analytics command has a few filters that you can use to narrow down the data you want to export. The filters are:</p>"},{"location":"analytics/fetch/#time-range","title":"Time Range","text":"<ul> <li> <p>Start Time</p> <ul> <li>Flag: <code>--start-time, -s</code></li> <li>Format: ISO-8601</li> <li>Default: Current day minus one month</li> <li>Example: <code>--start-time 2024-01-01T00:00:00Z</code></li> </ul> </li> <li> <p>End Time</p> <ul> <li>Flag: <code>--end-time, -s</code></li> <li>Format: ISO-8601</li> <li>Default: Current day</li> <li>Example: <code>--end-time 2024-01-01T00:00:00Z</code></li> </ul> </li> </ul>"},{"location":"analytics/fetch/#limit","title":"Limit","text":"<ul> <li>Flag: <code>--limit, -l</code></li> <li>Description: Maximum number of records to fetch</li> <li>Default: 100</li> <li>Example: <code>--limit 500</code></li> </ul>"},{"location":"analytics/fetch/#output-file","title":"Output File","text":"<ul> <li>Flag: <code>--output-file, -d</code></li> <li>Description: Path where analytics will be saved</li> <li>Default: <code>analytics.json</code></li> <li>Example: <code>--output-file my-analytics.json</code></li> </ul>"},{"location":"analytics/fetch/#analytics-types","title":"Analytics Types","text":"<ul> <li>Flag: <code>--analytics, -t</code></li> <li>Description: Types of analytics to fetch</li> <li>Default: All types listed below</li> <li>Multiple values allowed: Yes</li> </ul> Analytics Type Description <code>interactions</code> User interaction data <code>sessions</code> Session-level analytics <code>top_intents</code> Most triggered intents <code>top_slots</code> Most used slots <code>understood_messages</code> Successfully parsed messages <code>unique_users</code> Distinct user counts <code>token_usage</code> API token consumption"},{"location":"analytics/fetch/#example-usage","title":"Example Usage","text":"<pre><code>voiceflow analytics fetch \\\n  --agent-id abc123 \\\n  --start-time 2024-01-01T00:00:00Z \\\n  --end-time 2024-02-01T00:00:00Z \\\n  --limit 500 \\\n  --analytics interactions,sessions \\\n  --output-file jan-2024-analytics.json\n</code></pre>"},{"location":"analytics/introduction/","title":"Analytics","text":""},{"location":"analytics/introduction/#what-is-this","title":"What is this?","text":"<p>Voiceflow agents' analytics provide insights into how your users are interacting with your voice and chat applications. It helps you understand how your users are interacting with your application, what intents they are hitting, and where they are dropping off.</p>"},{"location":"analytics/introduction/#reference","title":"Reference","text":"<p>The <code>voiceflow-cli</code> has a command that allows you to interact with your Vocieflow Agents' analytics from your terminal or from your CI pipelines.</p> <p>To know more, you can run the <code>voiceflow analytics</code> command. For the usage, please refer to this page.</p>"},{"location":"cmd/voiceflow/","title":"voiceflow","text":"<p>Voiceflow CLI</p>"},{"location":"cmd/voiceflow/#synopsis","title":"Synopsis","text":"<p>Welcome to voiceflow-cli!</p> <p>This utility provides you with an easy way to interact with your Voiceflow agents.</p> <p>You can find the documentation at https://github.com/xavidop/voiceflow-cli.</p> <p>Please file all bug reports on GitHub at https://github.com/xavidop/voiceflow-cli/issues.</p> <pre><code>voiceflow [flags]\n</code></pre>"},{"location":"cmd/voiceflow/#options","title":"Options","text":"<pre><code>  -h, --help                         help for voiceflow\n  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow/#see-also","title":"See also","text":"<ul> <li>voiceflow agent   - Actions on agents</li> <li>voiceflow analytics   - Actions on analytics</li> <li>voiceflow completion     - Generate the autocompletion script for the specified shell</li> <li>voiceflow document     - Actions on documents</li> <li>voiceflow jsonschema     - outputs voiceflow's JSON schema</li> <li>voiceflow kb     - Actions on knowledge base</li> <li>voiceflow test     - Actions on conversation testing</li> <li>voiceflow transcript     - Actions on transcripts</li> <li>voiceflow version   - Get voiceflow-cli version</li> </ul>"},{"location":"cmd/voiceflow_agent/","title":"voiceflow agent","text":"<p>Actions on agents</p> <pre><code>voiceflow agent [flags]\n</code></pre>"},{"location":"cmd/voiceflow_agent/#options","title":"Options","text":"<pre><code>  -h, --help   help for agent\n</code></pre>"},{"location":"cmd/voiceflow_agent/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_agent/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow agent export     - Export a voiceflow project into a file</li> </ul>"},{"location":"cmd/voiceflow_agent_export/","title":"voiceflow agent export","text":"<p>Export a voiceflow project into a file</p> <pre><code>voiceflow agent export [flags]\n</code></pre>"},{"location":"cmd/voiceflow_agent_export/#options","title":"Options","text":"<pre><code>  -a, --agent-id string      Voiceflow Agent ID (required)\n  -h, --help                 help for export\n  -d, --output-file string   Output directory to save the VF file. Default is agent.vf (optional) (default \"agent.vf\")\n  -s, --version-id string    Voiceflow Version ID (optional). Default: development (default \"development\")\n</code></pre>"},{"location":"cmd/voiceflow_agent_export/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_agent_export/#see-also","title":"See also","text":"<ul> <li>voiceflow agent   - Actions on agents</li> </ul>"},{"location":"cmd/voiceflow_analytics/","title":"voiceflow analytics","text":"<p>Actions on analytics</p> <pre><code>voiceflow analytics [flags]\n</code></pre>"},{"location":"cmd/voiceflow_analytics/#options","title":"Options","text":"<pre><code>  -h, --help   help for analytics\n</code></pre>"},{"location":"cmd/voiceflow_analytics/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_analytics/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow analytics fetch   - Fetch all project analytics. They could write into a file</li> </ul>"},{"location":"cmd/voiceflow_analytics_fetch/","title":"voiceflow analytics fetch","text":"<p>Fetch all project analytics. They could write into a file</p> <pre><code>voiceflow analytics fetch [flags]\n</code></pre>"},{"location":"cmd/voiceflow_analytics_fetch/#options","title":"Options","text":"<pre><code>  -a, --agent-id string         Voiceflow Agent ID (required)\n  -t, --analytics stringArray   Analytics to fetch. Default is interactions,sessions,top_intents,top_slots,understood_messages,unique_users,token_usage (optional) (default [interactions,sessions,top_intents,top_slots,understood_messages,unique_users,token_usage])\n  -e, --end-time string         Start time in ISO-8601 format to fetch the analytics. Default is current day ago (optional)\n  -h, --help                    help for fetch\n  -l, --limit int               Limit of analytics to fetch. Default is 100 (optional) (default 100)\n  -d, --output-file string      Output directory to save the analytics. Default is analytics.json (optional) (default \"analytics.json\")\n  -s, --start-time string       Start time in ISO-8601 format to fetch the analytics. Default is current day but a month ago (optional)\n</code></pre>"},{"location":"cmd/voiceflow_analytics_fetch/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_analytics_fetch/#see-also","title":"See also","text":"<ul> <li>voiceflow analytics   - Actions on analytics</li> </ul>"},{"location":"cmd/voiceflow_completion/","title":"voiceflow completion","text":"<p>Generate the autocompletion script for the specified shell</p>"},{"location":"cmd/voiceflow_completion/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for voiceflow for the specified shell. See each sub-command's help for details on how to use the generated script.</p>"},{"location":"cmd/voiceflow_completion/#options","title":"Options","text":"<pre><code>  -h, --help   help for completion\n</code></pre>"},{"location":"cmd/voiceflow_completion/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_completion/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow completion bash   - Generate the autocompletion script for bash</li> <li>voiceflow completion fish   - Generate the autocompletion script for fish</li> <li>voiceflow completion powershell   - Generate the autocompletion script for powershell</li> <li>voiceflow completion zsh     - Generate the autocompletion script for zsh</li> </ul>"},{"location":"cmd/voiceflow_completion_bash/","title":"voiceflow completion bash","text":"<p>Generate the autocompletion script for bash</p>"},{"location":"cmd/voiceflow_completion_bash/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the bash shell.</p> <p>This script depends on the 'bash-completion' package. If it is not installed already, you can install it via your OS's package manager.</p> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(voiceflow completion bash)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"cmd/voiceflow_completion_bash/#linux","title":"Linux:","text":"<pre><code>voiceflow completion bash &gt; /etc/bash_completion.d/voiceflow\n</code></pre>"},{"location":"cmd/voiceflow_completion_bash/#macos","title":"macOS:","text":"<pre><code>voiceflow completion bash &gt; $(brew --prefix)/etc/bash_completion.d/voiceflow\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>voiceflow completion bash\n</code></pre>"},{"location":"cmd/voiceflow_completion_bash/#options","title":"Options","text":"<pre><code>  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cmd/voiceflow_completion_bash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_completion_bash/#see-also","title":"See also","text":"<ul> <li>voiceflow completion     - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cmd/voiceflow_completion_fish/","title":"voiceflow completion fish","text":"<p>Generate the autocompletion script for fish</p>"},{"location":"cmd/voiceflow_completion_fish/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the fish shell.</p> <p>To load completions in your current shell session:</p> <pre><code>voiceflow completion fish | source\n</code></pre> <p>To load completions for every new session, execute once:</p> <pre><code>voiceflow completion fish &gt; ~/.config/fish/completions/voiceflow.fish\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>voiceflow completion fish [flags]\n</code></pre>"},{"location":"cmd/voiceflow_completion_fish/#options","title":"Options","text":"<pre><code>  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cmd/voiceflow_completion_fish/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_completion_fish/#see-also","title":"See also","text":"<ul> <li>voiceflow completion     - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cmd/voiceflow_completion_powershell/","title":"voiceflow completion powershell","text":"<p>Generate the autocompletion script for powershell</p>"},{"location":"cmd/voiceflow_completion_powershell/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for powershell.</p> <p>To load completions in your current shell session:</p> <pre><code>voiceflow completion powershell | Out-String | Invoke-Expression\n</code></pre> <p>To load completions for every new session, add the output of the above command to your powershell profile.</p> <pre><code>voiceflow completion powershell [flags]\n</code></pre>"},{"location":"cmd/voiceflow_completion_powershell/#options","title":"Options","text":"<pre><code>  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cmd/voiceflow_completion_powershell/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_completion_powershell/#see-also","title":"See also","text":"<ul> <li>voiceflow completion     - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cmd/voiceflow_completion_zsh/","title":"voiceflow completion zsh","text":"<p>Generate the autocompletion script for zsh</p>"},{"location":"cmd/voiceflow_completion_zsh/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the zsh shell.</p> <p>If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:</p> <pre><code>echo \"autoload -U compinit; compinit\" &gt;&gt; ~/.zshrc\n</code></pre> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(voiceflow completion zsh)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"cmd/voiceflow_completion_zsh/#linux","title":"Linux:","text":"<pre><code>voiceflow completion zsh &gt; \"${fpath[1]}/_voiceflow\"\n</code></pre>"},{"location":"cmd/voiceflow_completion_zsh/#macos","title":"macOS:","text":"<pre><code>voiceflow completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_voiceflow\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>voiceflow completion zsh [flags]\n</code></pre>"},{"location":"cmd/voiceflow_completion_zsh/#options","title":"Options","text":"<pre><code>  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cmd/voiceflow_completion_zsh/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_completion_zsh/#see-also","title":"See also","text":"<ul> <li>voiceflow completion     - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cmd/voiceflow_document/","title":"voiceflow document","text":"<p>Actions on documents</p> <pre><code>voiceflow document [flags]\n</code></pre>"},{"location":"cmd/voiceflow_document/#options","title":"Options","text":"<pre><code>  -h, --help   help for document\n</code></pre>"},{"location":"cmd/voiceflow_document/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_document/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow document upload-file     - Upload a dile to a knowledge base</li> <li>voiceflow document upload-url   - Upload a URL to a knowledge base</li> </ul>"},{"location":"cmd/voiceflow_document_upload-file/","title":"voiceflow document upload-file","text":"<p>Upload a dile to a knowledge base</p> <pre><code>voiceflow document upload-file [flags]\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-file/#options","title":"Options","text":"<pre><code>  -f, --file string                 File to upload to the knowledge base (required)\n  -h, --help                        help for upload-file\n  -g, --llm-based-chunking          LLM to determine the optimal chunking of the document content based on semantic similarity and retrieval effectiveness. Default is false (optional)\n  -s, --llm-content-summarization   LLM to summarize and rewrite the content, removing unnecessary information and focusing on important parts to optimize for retrieval. Default is false (optional)\n  -q, --llm-generated-q             If an LLM to generate a question based on the document context and specific chunk, and prepend it to the chunk. Default is false (optional)\n  -p, --llm-prepend-context         LLM to generate a context summary based on the document and chunk context, and prepend it to each chunk. Default is false (optional)\n  -k, --markdown-conversion         Enable HTML to markdown conversion. Default is false (optional)\n  -m, --max-chunk-size int          Determines how granularly each document is broken up. Default is 1000 (optional) (default 1000)\n  -w, --overwrite                   Overwrite the document if it already exists in the knowledge base. Default is false (optional)\n  -t, --tags stringArray            An array of tag labels to attach to a KB document that can be used to filter document eligibility in query retrieval. Default is empty (optional)\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-file/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-file/#see-also","title":"See also","text":"<ul> <li>voiceflow document     - Actions on documents</li> </ul>"},{"location":"cmd/voiceflow_document_upload-url/","title":"voiceflow document upload-url","text":"<p>Upload a URL to a knowledge base</p> <pre><code>voiceflow document upload-url [flags]\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-url/#options","title":"Options","text":"<pre><code>  -h, --help                        help for upload-url\n  -g, --llm-based-chunking          LLM to determine the optimal chunking of the document content based on semantic similarity and retrieval effectiveness. Default is false (optional)\n  -s, --llm-content-summarization   LLM to summarize and rewrite the content, removing unnecessary information and focusing on important parts to optimize for retrieval. Default is false (optional)\n  -q, --llm-generated-q             If an LLM to generate a question based on the document context and specific chunk, and prepend it to the chunk. Default is false (optional)\n  -p, --llm-prepend-context         LLM to generate a context summary based on the document and chunk context, and prepend it to each chunk. Default is false (optional)\n  -k, --markdown-conversion         Enable HTML to markdown conversion. Default is false (optional)\n  -m, --max-chunk-size int          Determines how granularly each document is broken up. Default is 1000 (optional) (default 1000)\n  -n, --name string                 Name of the document that will be uploaded to the knowledge base (required)\n  -w, --overwrite                   Overwrite the document if it already exists in the knowledge base. Default is false (optional)\n  -t, --tags stringArray            An array of tag labels to attach to a KB document that can be used to filter document eligibility in query retrieval. Default is empty (optional)\n  -l, --url string                  URL to upload to the knowledge base (required)\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-url/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_document_upload-url/#see-also","title":"See also","text":"<ul> <li>voiceflow document     - Actions on documents</li> </ul>"},{"location":"cmd/voiceflow_jsonschema/","title":"voiceflow jsonschema","text":"<p>outputs voiceflow's JSON schema</p> <pre><code>voiceflow jsonschema [flags]\n</code></pre>"},{"location":"cmd/voiceflow_jsonschema/#options","title":"Options","text":"<pre><code>  -h, --help                   help for jsonschema\n  -f, --output-folder string   Where to save the JSONSchema file (default \"-\")\n</code></pre>"},{"location":"cmd/voiceflow_jsonschema/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_jsonschema/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> </ul>"},{"location":"cmd/voiceflow_kb/","title":"voiceflow kb","text":"<p>Actions on knowledge base</p> <pre><code>voiceflow kb [flags]\n</code></pre>"},{"location":"cmd/voiceflow_kb/#options","title":"Options","text":"<pre><code>  -h, --help   help for kb\n</code></pre>"},{"location":"cmd/voiceflow_kb/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_kb/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow kb query     - Query a knowledge base</li> </ul>"},{"location":"cmd/voiceflow_kb_query/","title":"voiceflow kb query","text":"<p>Query a knowledge base</p> <pre><code>voiceflow kb query [flags]\n</code></pre>"},{"location":"cmd/voiceflow_kb_query/#options","title":"Options","text":"<pre><code>  -c, --chunk-limit int            Chunk limit to use while asking the knowledge base. Default to 2 (optional) (default 2)\n  -j, --exclude-operator string    Tags to exclude. Possible values: and/or. Default is empty (optional)\n  -y, --exclude-tags stringArray   Tags to exclude. Default is empty (optional)\n  -h, --help                       help for query\n  -n, --include-all-non-tagged     Filters KB documents to include those that have no KB tags attached. Default to false (optional)\n  -g, --include-all-tagged         Filters KB documents to include those that have any KB tags attached. Default to false (optional)\n  -i, --include-operator string    Tags to include. Possible values: and/or. Default is empty (optional)\n  -t, --include-tags stringArray   Tags to include. Default is empty (optional)\n  -m, --model string               Model to use while asking the knowledge base (required)\n  -d, --output-file string         Output directory to save the information returned by the CLI. Default is query.json (optional) (default \"query.json\")\n  -q, --question string            Question to ask to the knowledge base (required)\n  -s, --synthesis                  Indicates whether to use language models to generate an answer. Default to true (optional) (default true)\n  -p, --system-prompt string       System prompt to use while asking the knowledge base. Default is empty (optional)\n  -r, --temperature float          Temperature to use while asking the knowledge base. Default to 0.7 (optional) (default 0.7)\n</code></pre>"},{"location":"cmd/voiceflow_kb_query/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_kb_query/#see-also","title":"See also","text":"<ul> <li>voiceflow kb     - Actions on knowledge base</li> </ul>"},{"location":"cmd/voiceflow_test/","title":"voiceflow test","text":"<p>Actions on conversation testing</p> <pre><code>voiceflow test [flags]\n</code></pre>"},{"location":"cmd/voiceflow_test/#options","title":"Options","text":"<pre><code>  -h, --help   help for test\n</code></pre>"},{"location":"cmd/voiceflow_test/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_test/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow test execute     - Execute a suite</li> </ul>"},{"location":"cmd/voiceflow_test_execute/","title":"voiceflow test execute","text":"<p>Execute a suite</p> <pre><code>voiceflow test execute [suite-path] [flags]\n</code></pre>"},{"location":"cmd/voiceflow_test_execute/#options","title":"Options","text":"<pre><code>  -h, --help   help for execute\n</code></pre>"},{"location":"cmd/voiceflow_test_execute/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_test_execute/#see-also","title":"See also","text":"<ul> <li>voiceflow test     - Actions on conversation testing</li> </ul>"},{"location":"cmd/voiceflow_transcript/","title":"voiceflow transcript","text":"<p>Actions on transcripts</p> <pre><code>voiceflow transcript [flags]\n</code></pre>"},{"location":"cmd/voiceflow_transcript/#options","title":"Options","text":"<pre><code>  -h, --help   help for transcript\n</code></pre>"},{"location":"cmd/voiceflow_transcript/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_transcript/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> <li>voiceflow transcript fetch     - Fetch one transcripts from a project</li> <li>voiceflow transcript fetch-all     - Fetch all transcripts from a project</li> </ul>"},{"location":"cmd/voiceflow_transcript_fetch-all/","title":"voiceflow transcript fetch-all","text":"<p>Fetch all transcripts from a project</p> <pre><code>voiceflow transcript fetch-all [flags]\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch-all/#options","title":"Options","text":"<pre><code>  -a, --agent-id string           Voiceflow Agent ID (required)\n  -e, --end-time string           Start time in ISO-8601 format to fetch the analytics. Default is current day ago (optional)\n  -h, --help                      help for fetch-all\n  -d, --output-directory string   Output directory to save the transcripts. Default is ./output (optional) (default \"./output\")\n  -r, --range string              Range to filter the transcripts. Default is empty (optional)\n  -s, --start-time string         Start time in ISO-8601 format to fetch the analytics. Default is current day but a month ago (optional)\n  -g, --tag string                Tag to filter the transcripts. Default is empty (optional)\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch-all/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch-all/#see-also","title":"See also","text":"<ul> <li>voiceflow transcript     - Actions on transcripts</li> </ul>"},{"location":"cmd/voiceflow_transcript_fetch/","title":"voiceflow transcript fetch","text":"<p>Fetch one transcripts from a project</p> <pre><code>voiceflow transcript fetch [flags]\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch/#options","title":"Options","text":"<pre><code>  -a, --agent-id string           Voiceflow Agent ID (required)\n  -h, --help                      help for fetch\n  -d, --output-directory string   Output directory to save the transcripts. Default is ./output (optional) (default \"./output\")\n  -t, --transcript-id string      Voiceflow Transcript ID (required)\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_transcript_fetch/#see-also","title":"See also","text":"<ul> <li>voiceflow transcript     - Actions on transcripts</li> </ul>"},{"location":"cmd/voiceflow_version/","title":"voiceflow version","text":"<p>Get voiceflow-cli version</p> <pre><code>voiceflow version [flags]\n</code></pre>"},{"location":"cmd/voiceflow_version/#options","title":"Options","text":"<pre><code>  -h, --help   help for version\n</code></pre>"},{"location":"cmd/voiceflow_version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>  -o, --output-format string         Output Format. Options: text, json. Default: text (optional) (default \"text\")\n  -u, --skip-update-check            Skip the check for updates check run before every command (optional)\n  -v, --verbose                      verbose error output (with stack trace) (optional)\n  -x, --voiceflow-api-key string     Voiceflow API Key (optional)\n  -b, --voiceflow-subdomain string   Voiceflow Base URL (optional). Default: empty\n</code></pre>"},{"location":"cmd/voiceflow_version/#see-also","title":"See also","text":"<ul> <li>voiceflow   - Voiceflow CLI</li> </ul>"},{"location":"community/contributing/","title":"Contributing","text":"<p>By participating in this project, you agree to abide by our code of conduct.</p>"},{"location":"community/contributing/#set-up-your-machine","title":"Set up your machine","text":"<p><code>voiceflow-cli</code> is written in Go.</p> <p>Prerequisites:</p> <ul> <li>Go 1.20+</li> </ul> <p>Other things you might need to run the tests:</p> <ul> <li>cosign</li> <li>Docker</li> <li>Podman</li> <li>Snapcraft</li> <li>Syft</li> </ul> <p>Clone <code>voiceflow-cli</code> anywhere:</p> <pre><code>git clone git@github.com:xavidop/voiceflow-cli.git\n</code></pre> <p><code>cd</code> into the directory and install the dependencies:</p> <pre><code>go mod tidy\n</code></pre> <p>A good way of making sure everything is all right is running the build:</p> <pre><code>go build -o voiceflow .\n</code></pre>"},{"location":"community/contributing/#test-your-change","title":"Test your change","text":"<p>You can create a branch for your changes and try to build from the source as you go:</p> <pre><code>go build -o voiceflow .\n</code></pre>"},{"location":"community/contributing/#create-a-commit","title":"Create a commit","text":"<p>Commit messages should be well formatted, and to make that \"standardized\", we are using Conventional Commits.</p> <p>You can follow the documentation on their website.</p>"},{"location":"community/contributing/#submit-a-pull-request","title":"Submit a pull request","text":"<p>Push your branch to your <code>voiceflow-cli</code> fork and open a pull request against the main branch.</p>"},{"location":"community/contributing/#financial-contributions","title":"Financial contributions","text":"<p>You can contribute in our GitHub Sponsors or to any of the contributors directly. See this page for more details.</p>"},{"location":"community/sponsors/","title":"Sponsors","text":"<p>Do you or your company use voiceflow-cli? You can help keep the project bug-free and feature rich by sponsoring the project and its maintainers.</p>"},{"location":"community/sponsors/#github-sponsors","title":"GitHub Sponsors","text":"<p>GitHub Sponsors is a great way to contribute directly to the primary maintainer, xavidop.</p> <p>This money usually goes to buying coffee, beer, better hardware, and, hopefully, one day, paying the bills.</p> <p>You can sponsor and see who's sponsoring Xavier Portilla Edo here.</p> <p>\u2728\u2728 Thanks for your support! \u2728\u2728</p>"},{"location":"community/users/","title":"Users","text":""},{"location":"community/users/#who-uses-voiceflow-cli","title":"Who uses voiceflow-cli?","text":"<p>As the voiceflow-cli community grows, we'd like to keep a list of our users.</p> <p>Here's a running list of some organizations using voiceflow-cli<sup>1</sup>:</p> <ol> <li>Empty list, become the first one!</li> </ol> <p>Feel free to add yours!</p> <ol> <li> <p>Entries were either added by the companies themselves or by the maintainers after seeing it in the wild.\u00a0\u21a9</p> </li> </ol>"},{"location":"documents/introduction/","title":"Documents","text":""},{"location":"documents/introduction/#what-is-this","title":"What is this?","text":"<p>The Documents are items that are uploaded to the Knowledge Base. They can be used to store information that can be used to answer questions or provide information to the users. The documents can be uploaded in various formats like PDF, Word, Markdown, etc. The documents can be processed using the LLM model to generate questions, summarize content, etc.</p>"},{"location":"documents/introduction/#reference","title":"Reference","text":"<p>The <code>voiceflow-cli</code> has a command that allows you to interact with your documents of your Vocieflow Knowledge bases from your terminal or from your CI pipelines.</p> <p>To know more, you can run the <code>voiceflow document</code> command. For the usage, please refer to this page.</p>"},{"location":"documents/upload-file/","title":"Upload URLs to the Knowledge Base","text":"<p>With the <code>vocieflow-cli</code> you can upload content from a file to your Voiceflow Knowledge Base with customizable processing options. This is useful when you want to perform a automations around your knowledge base. The <code>voiceflow-cli</code> has one command that allows you to update your knowledge base from your terminal:</p>"},{"location":"documents/upload-file/#command-usage","title":"Command Usage","text":"<pre><code>voiceflow document upload-file [flags]\n</code></pre>"},{"location":"documents/upload-file/#aliases","title":"Aliases","text":"<ul> <li><code>uf</code></li> <li><code>upload-files</code></li> </ul>"},{"location":"documents/upload-file/#parameters","title":"Parameters","text":""},{"location":"documents/upload-file/#required-flags","title":"Required Flags","text":"<ul> <li><code>--file</code>: Path to local file</li> </ul>"},{"location":"documents/upload-file/#processing-options","title":"Processing Options","text":"<ul> <li><code>--max-chunk-size</code>: Maximum size of content chunks</li> <li><code>--markdown-conversion</code>: Convert content to markdown format</li> <li><code>--overwrite</code>: Overwrite existing document if present</li> </ul>"},{"location":"documents/upload-file/#llm-processing-options","title":"LLM Processing Options","text":"<ul> <li><code>--llm-generated-q</code>: Enable LLM-generated questions</li> <li><code>--llm-prepend-context</code>: Prepend context using LLM</li> <li><code>--llm-based-chunking</code>: Use LLM for content chunking</li> <li><code>--llm-content-summarization</code>: Enable content summarization</li> </ul>"},{"location":"documents/upload-file/#metadata","title":"Metadata","text":"<ul> <li><code>--tags</code>: Array of tags to associate with document</li> </ul>"},{"location":"documents/upload-file/#examples","title":"Examples","text":""},{"location":"documents/upload-file/#basic-file-upload","title":"Basic File Upload","text":"<pre><code>voiceflow document upload-file \\\n  --file ./docs/api.pdf\n</code></pre>"},{"location":"documents/upload-file/#advanced-upload-with-processing","title":"Advanced Upload with Processing","text":"<pre><code>voiceflow document upload-file \\\n  --file ./docs/guide.md \\\n  --max-chunk-size 1000 \\\n  --markdown-conversion \\\n  --llm-generated-q \\\n  --llm-content-summarization \\\n  --tags guide,user\n</code></pre>"},{"location":"documents/upload-file/#upload-with-overwrite","title":"Upload with Overwrite","text":"<pre><code>voiceflow document upload-file \\\n  --file ./docs/updated-policy.pdf \\\n  --overwrite \\\n  --tags policy,legal\n</code></pre>"},{"location":"documents/upload-file/#supported-file-types","title":"Supported File Types","text":"<ul> <li>PDF</li> <li>TXT</li> <li>DOC/DOCX</li> <li>MD</li> <li>And other text-based formats</li> </ul>"},{"location":"documents/upload-file/#requirements","title":"Requirements","text":"<ul> <li>File must be accessible locally</li> </ul>"},{"location":"documents/upload-url/","title":"Upload URLs to the Knowledge Base","text":"<p>With the <code>vocieflow-cli</code> you can upload content from a URL to your Voiceflow Knowledge Base with customizable processing options. This is useful when you want to perform a automations around your knowledge base. The <code>voiceflow-cli</code> has one command that allows you to update your knowledge base from your terminal:</p>"},{"location":"documents/upload-url/#command-usage","title":"Command Usage","text":"<pre><code>voiceflow document upload-url [flags]\n</code></pre>"},{"location":"documents/upload-url/#aliases","title":"Aliases","text":"<ul> <li><code>ur</code></li> <li><code>upload-urls</code></li> </ul>"},{"location":"documents/upload-url/#parameters","title":"Parameters","text":""},{"location":"documents/upload-url/#required-flags","title":"Required Flags","text":"<ul> <li><code>--url</code>: URL to upload content from</li> <li><code>--name</code>: Name for the uploaded document</li> </ul>"},{"location":"documents/upload-url/#processing-options","title":"Processing Options","text":"<ul> <li><code>--max-chunk-size</code>: Maximum size of content chunks</li> <li><code>--markdown-conversion</code>: Convert content to markdown format</li> <li><code>--overwrite</code>: Overwrite existing document if present</li> </ul>"},{"location":"documents/upload-url/#llm-processing-options","title":"LLM Processing Options","text":"<ul> <li><code>--llm-generated-q</code>: Enable LLM-generated questions</li> <li><code>--llm-prepend-context</code>: Prepend context using LLM</li> <li><code>--llm-based-chunking</code>: Use LLM for content chunking</li> <li><code>--llm-content-summarization</code>: Enable content summarization</li> </ul>"},{"location":"documents/upload-url/#metadata","title":"Metadata","text":"<ul> <li><code>--tags</code>: Array of tags to associate with the document</li> </ul>"},{"location":"documents/upload-url/#examples","title":"Examples","text":""},{"location":"documents/upload-url/#basic-upload","title":"Basic Upload","text":"<pre><code>voiceflow document upload-url --url https://docs.example.com/api --name \"API Documentation\"\n</code></pre>"},{"location":"documents/upload-url/#advanced-upload-with-llm-processing","title":"Advanced Upload with LLM Processing","text":"<pre><code>voiceflow document upload-url \\\n  --url https://docs.example.com/api \\\n  --name \"API Documentation\" \\\n  --max-chunk-size 1000 \\\n  --markdown-conversion \\\n  --llm-generated-q \\\n  --llm-content-summarization \\\n  --tags api,documentation\n</code></pre>"},{"location":"documents/upload-url/#upload-with-overwrite","title":"Upload with Overwrite","text":"<pre><code>voiceflow document upload-url \\\n  --url https://docs.example.com/api \\\n  --name \"API Documentation\" \\\n  --overwrite \\\n  --tags api,v2\n</code></pre>"},{"location":"kb/introduction/","title":"Knowledge Base","text":""},{"location":"kb/introduction/#what-is-this","title":"What is this?","text":"<p>The Knowledge Base is a repository and management system for content that your AI Agent uses to provide accurate and contextually relevant responses. It allows you to:</p> <ol> <li>Store and organize information your agent can reference</li> <li>Provide context for more accurate and relevant responses</li> <li>Easily update and maintain your agent's knowledge</li> </ol>"},{"location":"kb/introduction/#reference","title":"Reference","text":"<p>The <code>voiceflow-cli</code> has a command that allows you to interact with your Vocieflow Knowledge bases from your terminal or from your CI pipelines.</p> <p>To know more, you can run the <code>voiceflow kb</code> command. For the usage, please refer to this page.</p>"},{"location":"kb/query/","title":"Export an agent","text":"<p>With the <code>vocieflow-cli</code> you can query your agents' knowledge base. This is useful when you want to perform a query on your knowledge base. The <code>voiceflow-cli</code> has one command that allows you to query your knowledge base from your terminal:</p>"},{"location":"kb/query/#parameters","title":"Parameters","text":""},{"location":"kb/query/#required-parameters","title":"Required Parameters","text":"<ul> <li><code>--model, -m</code>: AI model to process knowledge base queries<ul> <li>Required: Yes</li> <li>Example: <code>--model gpt-4</code></li> </ul> </li> </ul>"},{"location":"kb/query/#optional-parameters","title":"Optional Parameters","text":""},{"location":"kb/query/#model-configuration","title":"Model Configuration","text":"<ul> <li> <p><code>--temperature, -r</code></p> <ul> <li>Range: 0.0 to 1.0</li> <li>Default: 0.7</li> <li>Purpose: Controls response randomness</li> </ul> </li> <li> <p><code>--chunk-limit, -c</code></p> <ul> <li>Default: 2</li> <li>Purpose: Maximum chunks to process</li> </ul> </li> <li> <p><code>--synthesis, -s</code></p> <ul> <li>Default: true</li> <li>Purpose: Enable/disable AI answer generation</li> </ul> </li> <li> <p><code>--system-prompt, -p</code></p> <ul> <li>Default: empty</li> <li>Purpose: Custom system instructions</li> </ul> </li> </ul>"},{"location":"kb/query/#tag-filtering","title":"Tag Filtering","text":"<ul> <li> <p><code>--include-tags, -t</code></p> <ul> <li>Default: []</li> <li>Purpose: Tags to include in search</li> </ul> </li> <li> <p><code>--include-operator, -i</code></p> <ul> <li>Values: \"and\"/\"or\"</li> <li>Purpose: Logic operator for included tags</li> </ul> </li> <li> <p><code>--exclude-tags, -y</code></p> <ul> <li>Default: []</li> <li>Purpose: Tags to exclude from search</li> </ul> </li> <li> <p><code>--exclude-operator, -j</code></p> <ul> <li>Values: \"and\"/\"or\"</li> <li>Purpose: Logic operator for excluded tags</li> </ul> </li> <li> <p><code>--include-all-tagged, -g</code></p> <ul> <li>Default: false</li> <li>Purpose: Include all documents with tags</li> </ul> </li> <li> <p><code>--include-all-non-tagged, -n</code></p> <ul> <li>Default: false</li> <li>Purpose: Include all documents without tags</li> </ul> </li> </ul>"},{"location":"kb/query/#output","title":"Output","text":"<ul> <li><code>--output-file, -d</code><ul> <li>Default: \"query.json\"</li> <li>Purpose: Results output location</li> </ul> </li> </ul>"},{"location":"kb/query/#examples","title":"Examples","text":""},{"location":"kb/query/#basic-query","title":"Basic Query","text":"<pre><code>voiceflow kb query --quesiton \"How does feature X work?\" --model gpt-4\n</code></pre>"},{"location":"overview/authentication/","title":"Authentication","text":"<p><code>voiceflow-cli</code> uses Voiceflow APIs. To interact with your Vocieflow projects you will need a Voiceflow API Key. You can get your API Key in your Voiceflow project &gt; Integration page. You can pass the API Key to the CLI using the <code>--voiceflow-api-key</code> flag or by setting the <code>VF_API_KEY</code> environment variable. <code>voiceflow-cli</code> also works with <code>.env</code> files. You can create a <code>.env</code> file in the root of your project and add the <code>VF_API_KEY</code> variable to it.</p> <p>The <code>voiceflow-cli</code> source code is open source, you can check it out here to learn more about the actions the tool performs.</p>"},{"location":"overview/authentication/#base-url","title":"Base URL","text":"<p>The base URL for the Voiceflow API is <code>https://&lt;api&gt;.&lt;subdomain&gt;.voiceflow.com</code>. The default value is without subdomain: <code>https://&lt;api&gt;.voiceflow.com</code>. If you are using a different Voiceflow environment, you can pass the subdomain using the <code>--voiceflow-subdomain</code> flag.</p>"},{"location":"overview/faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"overview/faq/#how-does-it-work","title":"How does it work?","text":"<p><code>voiceflow-cli</code> has three main purposes:</p> <ol> <li>Make the interaction with your Voiceflow agents from your laptop or your continuous integration pipelines easier than ever</li> <li>Create testing tools that will help users build their Vocieflow agent</li> </ol>"},{"location":"overview/faq/#who-is-voiceflow-cli-for","title":"Who is <code>voiceflow-cli</code> for?","text":"<p><code>voiceflow-cli</code> is primarily for software engineering teams who are currently using Voiceflow. It is recommended for machine learning engineers that usually work with LLMs, STT, TTS, NLU and NLP technologies.</p>"},{"location":"overview/faq/#what-kind-of-machinescontainers-do-i-need-for-the-voiceflow-cli","title":"What kind of machines/containers do I need for the <code>voiceflow-cli</code>?","text":"<p>You'll need either: a bare-metal host (your own, AWS i3.metal or Equinix Metal) or a VM that supports nested virtualisation such as those provided by Google Cloud, Azure, AWS, DigitalOcean, etc. or a Linux or Windows container.</p>"},{"location":"overview/faq/#when-will-jenkins-gitlab-ci-bitbucket-pipeline-runners-drone-or-azure-devops-be-supported","title":"When will Jenkins, GitLab CI, BitBucket Pipeline Runners, Drone or Azure DevOps be supported?","text":"<p>For the current phase, we're targeting GitHub Actions because it has fine-grained access controls and the ability to schedule exactly one build to a runner. The other CI systems will be available soon.</p> <p>That said, if you're using these tools within your organisation, we'd like to hear from you. So feel free to reach out to us if you feel <code>voiceflow-cli</code> would be a good fit for your team.</p> <p>Feel free to contact us at: xavierportillaedo@gmail.com</p>"},{"location":"overview/faq/#what-kind-of-access-is-required-in-my-voiceflow-project","title":"What kind of access is required in my Voiceflow project?","text":"<p>Refer to the Authentication page here</p>"},{"location":"overview/faq/#can-voiceflow-cli-be-used-on-public-repos","title":"Can voiceflow-cli be used on public repos?","text":"<p>Yes, <code>voiceflow-cli</code> can be used on public and private repos.</p>"},{"location":"overview/faq/#whats-in-the-container-image-and-how-is-it-built","title":"What's in the Container image and how is it built?","text":"<p>The Container image contains uses <code>alpine:latest</code> and the <code>voiceflow-cli</code> installed on it.</p> <p>The image is built automatically using GitHub Actions and is available on a container registry.</p>"},{"location":"overview/faq/#is-arm64-supported","title":"Is ARM64 supported?","text":"<p>Yes, <code>voiceflow-cli</code> is built to run on both Intel/AMD and ARM64 hosts. This includes a Raspberry Pi 4B, AWS Graviton, Oracle Cloud ARM instances and potentially any other ARM64 instances that support virtualisation.</p>"},{"location":"overview/faq/#are-windows-or-macos-supported","title":"Are Windows or macOS supported?","text":"<p>Yes, in addition to Linux, Windows and macOS are also supported platforms for <code>voiceflow-cli</code> at this time on a AMD64 or ARM64 architecture.</p>"},{"location":"overview/faq/#is-voiceflow-cli-free-and-open-source","title":"Is <code>voiceflow-cli</code> free and open-source?","text":"<p><code>voiceflow-cli</code> is an open source tool, however, it interacts with Voiceflow, so a Voiceflow account is required.</p> <p>The website and documentation are available on GitHub and we plan to release some open source tools in the future for voiceflow customers.</p>"},{"location":"overview/install/","title":"Install","text":"<p>You can use <code>voiceflow-cli</code> by installing a pre-compiled binary (in several ways), using Docker, or compiling it from source. In the below sections, you can find the steps for each approach.</p>"},{"location":"overview/install/#install-a-pre-compiled-binary","title":"Install a pre-compiled binary","text":""},{"location":"overview/install/#homebrew-tap","title":"homebrew tap","text":"<p>Install the Voiceflow CLI: <pre><code>brew install xavidop/tap/voiceflow\n</code></pre></p>"},{"location":"overview/install/#snapcraft","title":"snapcraft","text":"<pre><code>sudo snap install voiceflow\n</code></pre>"},{"location":"overview/install/#aur","title":"aur","text":"<pre><code>yay -S cxcli-bin\n</code></pre>"},{"location":"overview/install/#scoop","title":"scoop","text":"<pre><code>scoop bucket add voiceflow https://github.com/xavidop/scoop-bucket.git\nscoop install voiceflow\n</code></pre>"},{"location":"overview/install/#chocolatey","title":"chocolatey","text":"<pre><code>choco install voiceflow\n</code></pre>"},{"location":"overview/install/#apt","title":"apt","text":"<pre><code>echo 'deb [trusted=yes] https://apt.fury.io/xavidop/ /' | sudo tee /etc/apt/sources.list.d/voiceflow.list\nsudo apt update\nsudo apt install voiceflow\n</code></pre>"},{"location":"overview/install/#yum","title":"yum","text":"<pre><code>echo '[voiceflow]\nname=Vocieflow CLI Repo\nbaseurl=https://yum.fury.io/xavidop/\nenabled=1\ngpgcheck=0' | sudo tee /etc/yum.repos.d/voiceflow.repo\nsudo yum install voiceflow\n</code></pre>"},{"location":"overview/install/#nix","title":"nix","text":""},{"location":"overview/install/#nixpkgs","title":"nixpkgs","text":"<pre><code>nix-env -iA voiceflow\n</code></pre> <p>Info</p> <p>The package in nixpkgs might be slightly outdated, as it is not updated automatically. Use our NUR to always get the latest updates.</p>"},{"location":"overview/install/#nur","title":"nur","text":"<p>First, you'll need to add our NUR to your nix configuration. You can follow the guides here.</p> <p>Once you do that, you can install the packages.</p> <pre><code>{ pkgs, lib, ... }: {\n    home.packages = with pkgs; [\n    nur.repos.xavidop.voiceflow\n    ];\n}\n</code></pre>"},{"location":"overview/install/#deb-rpm-and-apk-packages","title":"deb, rpm and apk packages","text":"<p>Download the <code>.deb</code>, <code>.rpm</code> or <code>.apk</code> packages from the OSS releases page and install them with the appropriate tools.</p>"},{"location":"overview/install/#go-install","title":"go install","text":"<pre><code>go install github.com/xavidop/voiceflow-cli@latest\n</code></pre>"},{"location":"overview/install/#bash-script","title":"bash script","text":"<pre><code>curl -sfL https://voiceflow.xavidop.me/static/run | bash\n</code></pre>"},{"location":"overview/install/#additional-options","title":"Additional Options","text":"<p>You can also set the <code>VERSION</code> variable to specify a version instead of using latest.</p> <p>You can also pass flags and args to voiceflow-cli:</p> <pre><code>curl -sfL https://voiceflow.xavidop.me/static/run |\n    VERSION=__VERSION__ bash -s -- version\n</code></pre> <p>Tip</p> <p>This script does not install anything, it just downloads, verifies and runs voiceflow-cli. Its purpose is to be used within scripts and CIs.</p>"},{"location":"overview/install/#manually","title":"manually","text":"<p>Download the pre-compiled binaries from the releases page and copy them to the desired location.</p>"},{"location":"overview/install/#verifying-the-artifacts","title":"Verifying the artifacts","text":""},{"location":"overview/install/#binaries","title":"binaries","text":"<p>All artifacts are checksummed, and the checksum file is signed with cosign.</p> <ol> <li>Download the files you want along with the <code>checksums.txt</code>, <code>checksum.txt.pem</code>, and <code>checksums.txt.sig</code> files from the releases page:     <pre><code>wget https://github.com/xavidop/voiceflow-cli/releases/download/__VERSION__/checksums.txt\nwget https://github.com/xavidop/voiceflow-cli/releases/download/__VERSION__/checksums.txt.sig\nwget https://github.com/xavidop/voiceflow-cli/releases/download/__VERSION__/checksums.txt.pem\n</code></pre></li> <li>Verify the signature:     <pre><code>COSIGN_EXPERIMENTAL=1 cosign verify-blob \\\n--cert checksums.txt.pem \\\n--signature checksums.txt.sig \\\nchecksums.txt\n</code></pre></li> <li>If the signature is valid, you can then verify the SHA256 sums match with the downloaded binary:     <pre><code>sha256sum --ignore-missing -c checksums.txt\n</code></pre></li> </ol>"},{"location":"overview/install/#docker-images","title":"docker images","text":"<p>Our Docker images are signed with cosign.</p> <p>Verify the signatures:</p> <pre><code>COSIGN_EXPERIMENTAL=1 cosign verify xavidop/voiceflow\n</code></pre> <p>Info</p> <p>The <code>.pem</code> and <code>.sig</code> files are the image <code>name:tag</code>, replacing <code>/</code> and <code>:</code> with <code>-</code>.</p>"},{"location":"overview/install/#running-with-docker","title":"Running with Docker","text":"<p>You can also use <code>voiceflow-cli</code> within a Docker container. To do that, you'll need to execute something more-or-less like the examples below.</p> <p>Registries:</p> <ul> <li><code>xavidop/voiceflow</code></li> <li><code>ghcr.io/xavidop/voiceflow</code></li> </ul> <p>Example usage:</p> <pre><code>docker run --rm \\\n    xavidop/voiceflow voiceflow version\n</code></pre> <p>Note that the image will almost always have the last stable Go version.</p> <p>If you need other packages and dependencies, you are encouraged to keep your own image. You can always use voiceflow-cli's own Dockerfile as a starting point and iterate on that.</p>"},{"location":"overview/install/#compiling-from-source","title":"Compiling from source","text":"<p>Here you have two options:</p> <p>If you want to contribute to the project, please follow the steps on our contributing guide.</p> <p>If you just want to build from source for whatever reason, follow these steps:</p> <p>clone:</p> <pre><code>git clone https://github.com/xavidop/voiceflow-cli\ncd voiceflow-cli\n</code></pre> <p>get the dependencies:</p> <pre><code>go mod tidy\n</code></pre> <p>build:</p> <pre><code>go build -o voiceflow .\n</code></pre> <p>verify that it works:</p> <pre><code>./voiceflow version\n</code></pre>"},{"location":"overview/roadmap/","title":"Roadmap","text":"<p><code>voiceflow-cli</code> is in active development. The core product is functioning.</p> <p>Our goal with the tool is to prove that there's market fit for a solution like this, and if so, we'll invest more time in automation, user experience, more features.</p> <p>For now, if you're interested in participating and giving feedback, we believe <code>voiceflow-cli</code> already solves pain at this stage.</p> <p>Shipped:</p> <ul> <li> Available in homebrew, scoop, choco, winget package managers</li> <li> Documentation updated</li> <li> Test execution</li> <li> Container image available for multiple architectures</li> <li> SBOM files created</li> <li> Artifacts uploaded, signed and available on GitHub</li> </ul> <p>Coming soon:</p> <ul> <li> Continuous integration support (GitHub Action, CircleCI, etc.)</li> <li> Add more Voiceflow APIs</li> </ul>"},{"location":"tests/examples/","title":"Examples","text":""},{"location":"tests/examples/#contains","title":"Contains","text":"<p>Simple example that demonstrates the Conversational Profiler in action using the contains validator. Find it here</p>"},{"location":"tests/introduction/","title":"Conversation profiler","text":""},{"location":"tests/introduction/#what-is-this","title":"What is this?","text":"<p>Use the Conversation Profiler to test user utterances and improve your agent's interaction model.</p> <p>With the Conversation Profiler, you can test the conversation flow of your agent. This means that you can send user's utterances to your agent and check if the agent is responding as expected (interactions). This feature is also useful when you have generative AI models in your agent, and you want to test if the agent is responding as expected. It is similar to the Voiceflow console's Test Agent feature, but with the Conversation Profiler, you can run your tests in your CI/CD pipelines and also it has additional features. Every suite is executed in the same Voiceflow user's session.</p> <p>All of the commands that are available in <code>voiceflow-cli</code> to execute the Conversation profiler are located within the <code>voiceflow test</code> subcommand.</p>"},{"location":"tests/introduction/#reference","title":"Reference","text":"<p>It is important to know which suites and tests you can build. Because of that, you can find the entire reference on the Reference page. Suites and test are defined as <code>yaml</code> files.</p> <p>The <code>voiceflow-cli</code> has a command that allows you to run these suites from your terminal or from your CI pipelines.</p> <p>To execute a suite, you can run the <code>voiceflow test execute [suitesPath]</code> command. For the usage, please refer to this page.</p>"},{"location":"tests/introduction/#examples","title":"Examples","text":"<p>You can find some useful examples on our GitHub repo and the Examples page.</p>"},{"location":"tests/introduction/#execution-example","title":"Execution Example","text":"<p>Here is a simple example of the <code>voiceflow test execute</code> command:</p> <pre><code>voiceflow test execute examples/test/\n</code></pre> <p>The above command will give you output similar to the following:</p> <pre><code>$ voiceflow test execute examples/test/\n\nDec 31 10:54:01.664 [INFO] Suite: Example Conversation Profiler Suite\nDescription: Suite used as an example\nEnvironment: development\nDec 31 10:54:01.664 [INFO] Running Tests:\nDec 31 10:54:01.664 [INFO] Running Test ID: Example test\nDec 31 10:54:01.664 [INFO] Interaction ID: test_1_1\nDec 31 10:54:01.664 [INFO]      Interaction Request Type: launch\nDec 31 10:54:02.693 [INFO]      Interaction Response Type: text\nDec 31 10:54:02.693 [INFO]      Interaction Response Message: Hey there! \ud83c\udf1f Welcome to the Isla Experience! I\u2019m like a warm cup of cocoa on a chilly day\u2014sweet, comforting, and maybe a little too hot if you\u2019re not careful! How\u2019s your day going?\nDec 31 10:54:02.693 [INFO] All validations passed for Interaction ID: test_1_1\nDec 31 10:54:02.693 [INFO] Interaction ID: test_1_2\nDec 31 10:54:02.693 [INFO]      Interaction Request Type: text\nDec 31 10:54:02.693 [INFO]      Interaction Request Payload: I am doing well\nDec 31 10:54:03.889 [INFO]      Interaction Response Type: text\nDec 31 10:54:03.889 [INFO]      Interaction Response Message: Awesome! Glad to hear it! Are you riding the wave of good vibes, or did you just find a hidden stash of chocolate? \ud83c\udf6b Either way, I\u2019m here for it! What\u2019s been the highlight of your day so far?\nDec 31 10:54:03.889 [INFO] All validations passed for Interaction ID: test_1_2\nDec 31 10:54:03.889 [INFO] Interaction ID: test_1_3\nDec 31 10:54:03.889 [INFO]      Interaction Request Type: text\nDec 31 10:54:03.889 [INFO]      Interaction Request Payload: I have been working very hard\nDec 31 10:54:06.090 [INFO]      Interaction Response Type: text\nDec 31 10:54:06.091 [INFO]      Interaction Response Message: Ah, the classic \u201cI\u2019m working hard\u201d routine! It\u2019s like a superhero origin story, but instead of gaining superpowers, you just gain a lot of coffee stains and a questionable relationship with your chair. What kind of work are you diving into?\nDec 31 10:54:06.091 [INFO] All validations passed for Interaction ID: test_1_3\n</code></pre> <p>Are you running this command in a CI/CD pipeline?</p> <p>If this is the case, we recommend that you set the <code>--output-format</code> parameter to <code>json</code>.</p>"},{"location":"tests/suites/","title":"Suites","text":""},{"location":"tests/suites/#reference","title":"Reference","text":"<p>A suite is a yaml file with the following structure:</p> <pre><code># suite.yaml\n\n# Name of the suite.\nname: Example Suite\n# Brief description of the suite.\ndescription: Suite used as an example\n# Environment name of your Voiceflow agent. It could be development, or production.\nenvironmentName: development\n# You can have multiple tests defined in separated files\ntests:\n  # ID of the test.\n  - id: test_id\n    # File where the test specification is located\n    file: ./test.yaml\n</code></pre> <p>It has the same structure as the NLU Profiler suite.</p>"},{"location":"tests/suites/#json-schema","title":"JSON Schema","text":"<p><code>voiceflow-cli</code> also has a jsonschema file, which you can use to have better editor support:</p> <pre><code>https://voiceflow.xavidop.me/static/conversationsuite.json\n</code></pre> <p>You can also specify it in your <code>yml</code> config files by adding a comment like the following: <pre><code># yaml-language-server: $schema=https://voiceflow.xavidop.me/static/conversationsuite.json\n</code></pre></p>"},{"location":"tests/tests/","title":"Tests","text":""},{"location":"tests/tests/#reference","title":"Reference","text":"<p>A test is a yaml file with the following structure:</p> <pre><code># test.yaml\n\n# Name of the test.\nname: Example test\n# Brief description of the test.\ndescription: These are some tests\n\n# A interactions is the test itself: given an input, you will validate the agent response returned by Voiceflow\n# You can have multiple interactions defined\ninteractions:\n  # The ID of the interactions\n  - id: test_1\n    user:\n      # the input type\n      # it could be text, audio or prompt\n      type: text\n      # The input itself in text format. For type: audio, you have to specify the audio file.\n      text: I want 3 pizzas\n    agent:\n      validate:\n        # String validation to check if the response returned by Voiceflow is correct\n        - type: contains\n          value: pizza\n\n  - id: test_2\n    user: \n      type: text\n      text: hi\n    agent:\n      # example with a traceType validation\n      validate:\n        - type: traceType\n          value: speak\n\n  - id: test_3\n    user: \n      type: text\n      audio: hello\n    agent:\n      # example with a regexp validation\n      validate:\n        - type: regexp\n          value: '/my-regex/'\n</code></pre>"},{"location":"tests/tests/#input-types","title":"Input types","text":""},{"location":"tests/tests/#text-input","title":"Text input","text":"<p>The input text is the simplest one. You just have to specify the text you want to send to Voiceflow. Make sure that the text is in the language you specified in the <code>localeId</code> field. to use this type you have to set the <code>type</code> field to <code>text</code> and the <code>text</code> field to the text you want to send.</p>"},{"location":"tests/tests/#validation-types","title":"Validation types","text":""},{"location":"tests/tests/#contains","title":"Contains","text":"<p>The contains validation type is the simplest one. It just checks if the response returned by the Voiceflow agent contains the value specified in the <code>value</code> field. To use this type you have to set the <code>type</code> field to <code>contains</code> and the <code>value</code> field to the value you want to check:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: contains\n    value: pizza\n</code></pre> <p>The <code>contains</code> validation has its own options:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: contains\n    value: pizza\n</code></pre> <p>If you set the <code>casesensitive</code> field to <code>true</code>, the validation will be case sensitive. By default, it is set to <code>false</code>.</p>"},{"location":"tests/tests/#equals","title":"Equals","text":"<p>The equals validation type is a little bit more complex. It checks if the response returned by the Voiceflow agent is equal to the value specified in the <code>value</code> field. To use this type you have to set the <code>type</code> field to <code>equals</code> and the <code>value</code> field to the value you want to check:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: equals\n    value: Here you have 3 pizzas\n</code></pre> <p>The <code>equals</code> validation has its own options:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: equals\n    value: Here you have 3 pizzas\n</code></pre> <p>If you set the <code>casesensitive</code> field to <code>true</code>, the validation will be case sensitive. By default, it is set to <code>false</code>.</p>"},{"location":"tests/tests/#regexp","title":"Regexp","text":"<p>The regexp validation type is the most complex one. It checks if the response returned by the Voiceflow agent matches the regexp specified in the <code>value</code> field. To use this type you have to set the <code>type</code> field to <code>regexp</code> and the <code>value</code> field to the regular expression you want to check:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: regexp\n    value: '/Here you have \\d pizzas/'\n</code></pre> <p>The <code>regexp</code> validation has its own options:</p> <pre><code>validate:\n  # String validation to check if the response returned by Voiceflow is correct\n  - type: regexp\n    value: '/Here you have \\d pizzas/'\n</code></pre> <p>If you set the <code>findinsubmatches</code> field to <code>true</code>, the validation will check if the regexp matches any of the submatches. By default, it is set to <code>false</code>.</p>"},{"location":"tests/tests/#json-schema","title":"JSON Schema","text":"<p><code>voiceflow-cli</code> also has a jsonschema file, which you can use to have better editor support:</p> <pre><code>https://voiceflow.xavidop.me/static/conversationtest.json\n</code></pre> <p>You can also specify it in your <code>yml</code> config files by adding a comment like the following: <pre><code># yaml-language-server: $schema=https://voiceflow.xavidop.me/static/conversationtest.json\n</code></pre></p>"},{"location":"tests/examples/contains/","title":"Audio input","text":""},{"location":"tests/examples/contains/#suite-file","title":"Suite file","text":"<pre><code># suite.yaml\n\nname: Example Suite\ndescription: Suite used as an example\nprojectId: test-cx-346408\nlocationId: us-central1\nagentName: test-agent\ntests:\n  - id: test_id\n    file: ./test.yaml\n</code></pre>"},{"location":"tests/examples/contains/#test-file","title":"Test file","text":"<pre><code># test.yaml\n\nname: Example test\ndescription: These are some tests\nlocaleId: en\ninteractions:\n  - id: test_1\n    user: \n      type: text\n      text: hi\n    agent:\n      validate:\n        - type: contains\n          value: hello\n</code></pre>"},{"location":"transcripts/fetching/","title":"Fetching transcripts","text":"<p>With the <code>vocieflow-cli</code> you can fetch the transcripts of your project. This is useful when you want to analyze the conversation flow of your agent. The <code>voiceflow-cli</code> has 2 commands that allow you to fetch the transcripts from your terminal:</p>"},{"location":"transcripts/fetching/#fetching-all-transcripts","title":"Fetching all transcripts","text":"<p>To fetch all transcripts, you need to know the <code>agent-id</code> of the agent you want to fetch the transcripts from. You can find that information in the Voiceflow Agent section under your Agent Settings on voiceflow.com.</p> <pre><code>voiceflow transcript fetch-all --agent-id &lt;your-agent-id&gt;\n</code></pre>"},{"location":"transcripts/fetching/#time-range-filters","title":"Time Range Filters","text":"<ul> <li> <p>Start Time</p> <ul> <li>Flag: <code>--start-time, -s</code></li> <li>Format: ISO-8601</li> <li>Default: Current date minus one month</li> <li>Example: <code>--start-time 2024-01-01T00:00:00Z</code></li> </ul> </li> <li> <p>End Time</p> <ul> <li>Flag: <code>--end-time, -e</code></li> <li>Format: ISO-8601</li> <li>Default: Current date</li> <li>Example: <code>--end-time 2024-02-01T00:00:00Z</code></li> </ul> </li> </ul>"},{"location":"transcripts/fetching/#content-filters","title":"Content Filters","text":"<ul> <li> <p>Tag Filter</p> <ul> <li>Flag: <code>--tag, -g</code></li> <li>Description: Filter transcripts by specific tag</li> <li>Default: Empty (no filter)</li> <li>Example: <code>--tag production</code></li> </ul> </li> <li> <p>Range Filter</p> <ul> <li>Flag: <code>--range, -r</code></li> <li>Description: Filter transcripts by date range</li> <li>Default: Empty (no filter)</li> <li>Example: <code>--range Yesterday</code></li> </ul> </li> </ul>"},{"location":"transcripts/fetching/#example-usage","title":"Example Usage","text":"<pre><code>voiceflow transcript fetch-all \\\n  --agent-id abc123 \\\n  --start-time 2024-01-01T00:00:00Z \\\n  --end-time 2024-02-01T00:00:00Z \\\n  --tag production \\\n  --range Yesterday \\\n  --output-directory ./my-transcripts\n</code></pre>"},{"location":"transcripts/fetching/#fetching-a-specific-transcript","title":"Fetching a specific transcript","text":"<p>To fetch a specific transcript, you need to know the <code>transcript-id</code> of the transcript you want to fetch. You can find the <code>transcript-id</code> in the Voiceflow Transcript section.</p> <pre><code>voiceflow transcript fetch --agent-id &lt;your-agent-id&gt; --transcript-id &lt;your-transcript-id&gt;\n</code></pre>"},{"location":"transcripts/introduction/","title":"Transcripts","text":""},{"location":"transcripts/introduction/#what-is-this","title":"What is this?","text":"<p>The goal of the Transcripts is to give you and your team an understanding of where your assistant was successful in helping your users, and where it can be improved.</p> <p>Each transcript provides a turn-by-turn record of each user interaction, what utterances they used, and what intents they hit along the way.</p>"},{"location":"transcripts/introduction/#reference","title":"Reference","text":"<p>The <code>voiceflow-cli</code> has a command that allows you to interact with transcripts from your terminal or from your CI pipelines.</p> <p>To execute know more, you can run the <code>voiceflow transcript</code> command. For the usage, please refer to this page.</p>"}]}